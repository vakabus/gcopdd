#!/usr/bin/python3

import sys
import os
from PyQt5.QtWidgets import QMainWindow, QApplication, QTabWidget, QSplitter, QPlainTextEdit, QTreeView, QFileSystemModel
from PyQt5.QtGui import QFont

from ntar import NtarFile, NtarException


def create_main_window():
	global main_window
	main_window = QMainWindow()
	main_window.setFont(QFont('mono'))
	main_window.setCentralWidget(create_splitter())
	main_window.setWindowTitle('ntar file manager')
	main_window.showMaximized()
	return main_window

def create_splitter():
	splitter = QSplitter()
	splitter.addWidget(create_tree())
	splitter.addWidget(create_tabs())
	splitter.setSizes([1, 3])
	return splitter

def create_tabs():
	global tabs
	tabs = QTabWidget()
	return tabs

def create_textbox(content):
	textbox = QPlainTextEdit(content)
	textbox.setReadOnly(True)
	textbox.setLineWrapMode(QPlainTextEdit.NoWrap)
	return textbox

def create_tree():
	tree = DumpsDirTreeView()
	return tree


class DumpsDirTreeView(QTreeView):
	def __init__(self):
		super().__init__()
		model = QFileSystemModel()
		model.setRootPath(dumps_dir)
		self.setModel(model)
		self.setRootIndex(model.index(dumps_dir))
	
	def currentChanged(self, curr, prev):
		if curr.model() is None:
			return
		tabs.clear()
		if curr.model().isDir(curr):
			return
		try:
			for entry_name, entry_content in sorted(NtarFile(open(curr.model().filePath(curr), 'rb')).items()):
				try:
					text = str(entry_content, 'utf-8')
				except UnicodeDecodeError as e:
					text = str(e)
				tabs.addTab(create_textbox(text), entry_name)
		except NtarException as e:
			tabs.clear()
			tabs.addTab(create_textbox(str(e)), '<error output>')


app = QApplication(sys.argv)
args = app.arguments()[1:]
if len(args) == 0:
	dumps_dir = os.path.join(sys.path[0], '../dumps')
elif len(args) == 1:
	dumps_dir = args[0]
else:
	print('Usage: ntar-fm [<DUMPS_DIR>]')
	sys.exit(1)
create_main_window()
sys.exit(app.exec_())
